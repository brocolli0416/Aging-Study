<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.10">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="https://app.prolific.co/submissions/complete?cc=45D0CA35" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="True" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1504, 1003]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="AL" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <SoundComponent name="TargetSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TargetSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="set every repeat" val="0.3" valType="code"/>
      </SoundComponent>
      <KeyboardComponent name="TDresp">
        <Param name="allowedKeys" updates="set every repeat" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TDresp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TargetSound.getDuration()" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="PlayTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="PlayTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TargetSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE as quickly as possible when you hear the target syllable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Cross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Cross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TargetSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_6">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="#TDRT = 0&amp;#10;#soundOnset = 0&amp;#10;#TDresponseOnset = 0&amp;#10;#TDreactiontime = 0&amp;#10;#TDcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#TDtimer = core.Clock()&amp;#10;&amp;#10;#if Sound == Target:&amp;#10;#    TDtimer.reset()&amp;#10;#if TDresp.keys != None:&amp;#10;#    TDRT = TDtimer.getTime()&amp;#10;#else:&amp;#10;#    TDRT = None&amp;#10;    &amp;#10;#if Sound == Target:&amp;#10;#    soundOnset = TDtimer.getTime()&amp;#10;#if TDresp.keys in ['', [], None]:&amp;#10;#    TDresp.keys = None&amp;#10;#if TDresp.keys != None:&amp;#10;#    TDresponseOnset = TDtimer.getTime()&amp;#10;#    TDreactiontime = TDresponseOnset - soundOnset&amp;#10;#    if TDreactiontime &lt; 2:&amp;#10;#        TDRT += TDreactiontime&amp;#10;#        TDcount += 1&amp;#10;#&amp;#10;#if TDcount &gt; 0:&amp;#10;#    TDmeanRT = TDRT/TDcount&amp;#10;#    PlayTD.addData('TDmean.rt', TDmeanRT)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="PlayTD.addData(&quot;T_Location&quot;, Location);&amp;#10;if ((loopcounter === 1)) {&amp;#10;    PlayTD.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="#PlayTD.addData('TDRT', TDRT)&amp;#10;#PlayTD.addData('SoundOnset', soundOnset)&amp;#10;#&amp;#10;#PlayTD.addData('TDcount', TDcount)&amp;#10;#PlayTD.addData('TDResponseTime', TDreactiontime)&amp;#10;#PlayTD.addData('TDresponseOnset', TDresponseOnset)&amp;#10;PlayTD.addData('T_Location', Location)&amp;#10;if loopcounter == 1:&amp;#10;    PlayTD.finished=True&amp;#10;    continueRoutine=False&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_6" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="PlaySample">
      <KeyboardComponent name="EndPlay">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndPlay" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$SyllableSound.getDuration() + 1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <SoundComponent name="SyllableSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SyllableSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$TargetFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="set every repeat" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Repeat">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Repeat" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$TargetFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$SyllableSound.getDuration() + 1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="SoundTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="SoundTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ContinueKey2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueKey2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$SyllableSound.getDuration() + 1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The target syllable is:&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;(Press SPACE when you hear this syllable in the recording)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="TrialNoTxt2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrialNoTxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$TrialNo&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="SampleSound">
      <MouseComponent name="Click">
        <Param name="clickable" updates="constant" val="Clickhere" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="Click" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="False" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="final" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <TextComponent name="SampleTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SampleTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="The target sound is:&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;Click anywhere on the screen to hear the sound" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextboxComponent name="Clickhere">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="False" valType="bool"/>
        <Param name="fillColor" updates="constant" val="None" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="Clickhere" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.13, 0.07)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="GA" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
    </Routine>
    <Routine name="Randomize">
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="count = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="count = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="Sound = WordFILES;&amp;#10;while ((count &lt; 16)) {&amp;#10;    count += 1;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="Sound = WordFILES&amp;#10;while count &lt; 16:&amp;#10;    &amp;#10;    count += 1" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AFCStart">
      <TextComponent name="QuestionNoTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="QuestionNoTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$QuestionNo" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="count1">
      <TextComponent name="Count1Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Count1Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="count2">
      <TextComponent name="Count2Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Count2Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="count">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="AFCcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="AFCcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="AFCcount += 1;&amp;#10;QuestionNo = ((&quot;Trial&quot; + AFCcount.toString()) + &quot; /16&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="AFCcount += 1&amp;#10;QuestionNo = &quot;Trial&quot; + str(AFCcount) + &quot; /16&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="TDStart">
      <TextComponent name="Countdown1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Countdown1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="RandCond">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="opt1 = &quot;0:48&quot;;&amp;#10;opt2 = &quot;48:96&quot;;&amp;#10;opt3 = &quot;96:144&quot;;&amp;#10;opt4 = &quot;144:192&quot;;&amp;#10;opt5 = &quot;192:240&quot;;&amp;#10;opt6 = &quot;240:288&quot;;&amp;#10;opt7 = &quot;288:336&quot;;&amp;#10;opt8 = &quot;336:384&quot;;&amp;#10;opt9 = &quot;384:432&quot;;&amp;#10;opt10 = &quot;432:480&quot;;&amp;#10;opt11 = &quot;480:528&quot;;&amp;#10;opt12 = &quot;528:576&quot;;&amp;#10;&amp;#10;if ((((Target === &quot;ru&quot;) || (Target === &quot;pu&quot;)) || (Target === &quot;ni&quot;))) {&amp;#10;    condlist = [opt1, opt2, opt3, opt4, opt5, opt6, opt7, opt8, opt9]; &amp;#10;    rows = condlist[(Math.random() * condlist.length) | 0];&amp;#10;} else {&amp;#10;    if ((((Target === &quot;re&quot;) || (Target === &quot;ge&quot;)) || (Target === &quot;me&quot;))) {&amp;#10;        condlist = [opt1, opt2, opt3, opt4, opt5, opt6, opt10, opt11, opt12]; &amp;#10;        rows = condlist[(Math.random() * condlist.length) | 0];&amp;#10;    } else {&amp;#10;        if ((((Target === &quot;fe&quot;) || (Target === &quot;ti&quot;)) || (Target === &quot;su&quot;))) {&amp;#10;            condlist = [opt1, opt2, opt3, opt10, opt11, opt12, opt7, opt8, opt9]; &amp;#10;            rows = condlist[(Math.random() * condlist.length) | 0];&amp;#10;        } else {&amp;#10;            condlist = [opt10, opt11, opt12, opt4, opt5, opt6, opt7, opt8, opt9]; &amp;#10;            rows = condlist[(Math.random() * condlist.length) | 0];&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="## Randomize between 6 randomizations&amp;#10;opt1 = &quot;0:48&quot; #FO #ta&amp;#10;opt2 = &quot;48:96&quot; #FO #ta&amp;#10;opt3 = &quot;96:144&quot; #FO #ta&amp;#10;opt4 = &quot;144:192&quot; #KI #ta&amp;#10;opt5 = &quot;192:240&quot; #KI #fe&amp;#10;opt6 = &quot;240:288&quot; #KI&amp;#10;opt7 = &quot;288:336&quot; #SI #re&amp;#10;opt8 = &quot;336:384&quot; #SI&amp;#10;opt9 = &quot;384:432&quot; #SI&amp;#10;opt10 = &quot;432:480&quot; #TAY #ru&amp;#10;opt11 = &quot;480:528&quot; #TAY&amp;#10;opt12 = &quot;528:576&quot; #TAY&amp;#10;&amp;#10;if Target == &quot;ru&quot; or Target == &quot;pu&quot; or Target == &quot;ni&quot;:&amp;#10;    rows = random.choice([opt1, opt2, opt3, opt4, opt5, opt6, opt7, opt8, opt9])&amp;#10;elif Target == &quot;re&quot; or Target == &quot;ge&quot; or Target == &quot;me&quot;:&amp;#10;    rows = random.choice([opt1, opt2, opt3, opt4, opt5, opt6, opt10, opt11, opt12])&amp;#10;elif Target == &quot;fe&quot; or Target == &quot;ti&quot; or Target == &quot;su&quot;:&amp;#10;    rows = random.choice([opt1, opt2, opt3, opt10, opt11, opt12, opt7, opt8, opt9])&amp;#10;else:&amp;#10;    rows = random.choice([opt10, opt11, opt12, opt4, opt5, opt6, opt7, opt8, opt9])" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="RandCond" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="SampleIntro">
      <TextComponent name="TargetMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TargetMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The target syllable is:&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;(Press SPACE when you hear this syllable in the recording)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PlayTargetKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PlayTargetKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="TargetTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="TargetTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="Count">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="repeatCount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="repeatCount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="repeatCount += 1;&amp;#10;TrialNo = ((&quot;Recording &quot; + repeatCount.toString()) + &quot; of 36&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="repeatCount += 1&amp;#10;TrialNo = &quot;Recording &quot; + str(repeatCount) + &quot; of 36&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Count" valType="code"/>
      </CodeComponent>
      <TextComponent name="TrialNoTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrialNoTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$TrialNo" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ContinueTxt4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueTxt4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to hear the syllable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Part1Intro">
      <TextComponent name="WelcomeTxt2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeTxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="In the next part, you will complete different tasks using your experience with the alien speech.&amp;#10;&amp;#10;First, the researchers would like you to mark the timing of when each syllable appears in the speech.&amp;#10;&amp;#10;We will play you 36 short snippets of the speech. At the beginning of each recording, you will be given a 'Target Syllable'. Every time the target syllable appears in the recording, press SPACE as quickly and accurately as you can to record the precise syllable onset time." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="BeginTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="BeginTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="RepCount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="repeatCount = 0&amp;#10;count = 0&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="repeatCount = 0;&amp;#10;count = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="RepCount" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="Part2Intro2">
      <TextComponent name="P2IntroTxt2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P2IntroTxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="In the next part, you will hear two speech sounds. Your task is to indicate whether the first or the second one sounds like a word from the language you just listened to.&amp;#10;&amp;#10;There will be 16 trials in total." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ContinueKey6">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueKey6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey7">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey7" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SoundCheckIntro">
      <TextComponent name="SoundCheckTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SoundCheckTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will begin with a quick volume calibration and headphone check. &amp;#10;&amp;#10;First, we will play some music to make sure that your sound volume is at a comfortable level.&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to begin the volume calibration " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="SoundCheckBegin">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SoundCheckBegin" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SoundCheck">
      <SoundComponent name="VolumeAdjust">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="VolumeAdjust" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="constant" val="volumeadjust.wav" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="0.4" valType="code"/>
      </SoundComponent>
      <TextComponent name="SoundCheckEndTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SoundCheckEndTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please adjust your volume to a comfortable level.&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE when you are ready to continue " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="SoundCheckEndKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="SoundCheckEndKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="BeginTD">
      <TextComponent name="BeginP1Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="BeginP1Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will now begin the task" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Welcome0">
      <TextComponent name="Welcome0Mssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="Welcome0Mssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome to the experiment!&amp;#10;&amp;#10;&amp;#10;&amp;#10;This experiment involves audio stimuli and requires you to wear headphones. Before we begin, please make sure that you're in a quiet listening environment, that you are wearing headphones, and that your volume is turned on.&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="Welcome0Continue">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Welcome0Continue" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="P1End">
      <TextComponent name="ThankyouMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ThankyouMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is the end of Part I.&amp;#10;Thank you for your response!&amp;#10;&amp;#10;You may take a short break now if you wish.&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ExitKey">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ExitKey" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE when you are ready to begin Part II" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="EndKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="P2BeginTraining">
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Let's first do some practice with a few words that we have created.&amp;#10;&amp;#10;During practice, you will be given feedback about whether your response was correct or not." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="P2BeginTrainingEnd">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P2BeginTrainingEnd" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey10">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey10" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TrainPause">
      <TextComponent name="TrainCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="TrainCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.8" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="P2End">
      <TextComponent name="EndMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="EndMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have now completed all the tasks.&amp;#10;Thank you for helping the researchers! We appreciate your time and cooporation. &amp;#10;&amp;#10;Your Completion Code is:&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="EndAllKey">
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndAllKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextboxComponent name="CompletionCode">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="Black" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="Black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="False" valType="bool"/>
        <Param name="fillColor" updates="constant" val="White" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="CompletionCode" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.05)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.07)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1B9FF7D8" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="ExitTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ExitTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.05)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please write the code down so you can enter it when you return to Prolific. You may then exit the study by pressing the ENTER key." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="FeedbackResp">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Times New Roman" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="FeedbackResp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val=" &amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="FeedbackQ">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Times New Roman" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="FeedbackQ" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Please use this section to leave any comment or feedback on the study. (Was there any technical difficulty? Any instruction that was unclear? etc.)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="EndMssg_Ver2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="EndMssg_Ver2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Thank you for completing the tasks! We appreciate your time and cooporation. &amp;#10;&amp;#10;You may now exit the study by pressing ENTER. You will then see a green dialog box that indicates that your data has been successfully saved. Once you click &quot;OK&quot;, you will be directed back to Prolific with your completion code.&amp;#10;PLEASE DO NOT CLOSE THIS WINDOW." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="AttentionCheck1">
      <KeyboardComponent name="AttentionKey1">
        <Param name="allowedKeys" updates="constant" val="'1', '2', 'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="2" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="AttentionKey1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="AttentionCheck1Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttentionCheck1Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="What is your favorite colour?&amp;#10;&amp;#10;(Please type your answer in the box below)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="AttnCheck1Resp">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="AttnCheck1Resp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="&amp;#10; " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="AttnCheck1Cont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttnCheck1Cont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press ENTER to submit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="OccurenceCounter2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="OccurenceC += 1;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="OccurenceC += 1" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="OccurenceCounter2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AttentionCheck2">
      <KeyboardComponent name="AttentionKey2">
        <Param name="allowedKeys" updates="constant" val="'1', '2', 'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="3" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="AttentionKey2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="AttentionCheck2Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttentionCheck2Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="What is your favorite food?&amp;#10;&amp;#10;(Please type your answer in the box below)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="AttnCheck2Resp">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="AttnCheck2Resp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="&amp;#10; " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="AttnCheck2Cont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttnCheck2Cont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press ENTER to submit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="HeadphoneCheck">
      <TextComponent name="HeadphoneCheckTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="HeadphoneCheckTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Next, we will do a short headphone check. Your submission may be rejected if you fail the headphone check.&amp;#10;&amp;#10;On each trial, you will hear three tones. One of these tones will be quieter than the others. You will identify whether the quiet tone occurred first, second, or third.&amp;#10;&amp;#10;There are six trials in total." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="HeadphoneContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="HeadphoneContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin the headphone check" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="HeadphoneContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="HeadphoneContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="HeadphonePlay">
      <SoundComponent name="CheckSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="CheckTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="CheckTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Which tone was the quietest?&amp;#10;(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = First  2 = Second  3 = Third" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="CheckResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3' " valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="TrialNumber">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="TrialNumber" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$checkcount" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_5">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="counter = 1&amp;#10;checkcount = str(counter) + &quot;/6&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="counter = 1;&amp;#10;checkcount = (counter.toString() + &quot;/6&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="counter += 1;&amp;#10;checkcount = (counter.toString() + &quot;/6&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="counter += 1&amp;#10;checkcount = str(counter) + &quot;/6&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((CheckResp.corr === 1)) {&amp;#10;    message = &quot;CORRECT&quot;;&amp;#10;} else {&amp;#10;    message = &quot;INCORRECT&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if CheckResp.corr == 1:&amp;#10;    message = &quot;CORRECT&quot;&amp;#10;else:&amp;#10;    message = &quot;INCORRECT&quot;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_5" valType="code"/>
      </CodeComponent>
      <TextComponent name="Cross2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Cross2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$CheckSound.getDuration() + 0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="loopcounter">
      <CodeComponent name="code_7">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="loopcounter = 1;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="loopcounter = 1&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_7" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="HeadphoneFeedback">
      <TextComponent name="FeedbackMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FeedbackMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$message" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="P1IntroII">
      <TextComponent name="P1Intro2Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P1Intro2Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great job! &amp;#10;Let's now work with the actual speech. Remember to try your best to press SPACE at the same time as the target syllable onset.&amp;#10;There will be no feedback given this time. &amp;#10;&amp;#10;&amp;#10;There are 36 recordings in total. You may take a short break at the beginning of each recording if you wish." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="TD_randomize">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="partone = &quot;0&quot;&amp;#10;parttwo = &quot;0&quot;&amp;#10;partthree = &quot;0&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="partone = &quot;0&quot;;&amp;#10;parttwo = &quot;0&quot;;&amp;#10;partthree = &quot;0&quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// Equivalent js function to random shuffle&amp;#10;function shuffle(array) {&amp;#10;  var currentIndex = array.length, temporaryValue, randomIndex;&amp;#10;&amp;#10;  // While there remain elements to shuffle...&amp;#10;  while (0 !== currentIndex) {&amp;#10;&amp;#10;    // Pick a remaining element...&amp;#10;    randomIndex = Math.floor(Math.random() * currentIndex);&amp;#10;    currentIndex -= 1;&amp;#10;&amp;#10;    // And swap it with the current element.&amp;#10;    temporaryValue = array[currentIndex];&amp;#10;    array[currentIndex] = array[randomIndex];&amp;#10;    array[randomIndex] = temporaryValue;&amp;#10;  }&amp;#10;&amp;#10;  return array;&amp;#10;}&amp;#10;&amp;#10;if ((cond === &quot;1&quot;)) {&amp;#10;    partone = &quot;0:12&quot;;&amp;#10;    parttwo = &quot;12:24&quot;;&amp;#10;    partthree = &quot;24:36&quot;;&amp;#10;} else {&amp;#10;    if ((cond === &quot;X&quot;)) {&amp;#10;        partone = &quot;36:48&quot;;&amp;#10;        parttwo = &quot;48:60&quot;;&amp;#10;        partthree = &quot;60:72&quot;;&amp;#10;    } else {&amp;#10;        if ((cond === &quot;2&quot;)) {&amp;#10;            partone = &quot;72:84&quot;;&amp;#10;            parttwo = &quot;84:96&quot;;&amp;#10;            partthree = &quot;96:108&quot;;&amp;#10;        } else {&amp;#10;            if ((cond === &quot;4&quot;)) {&amp;#10;                partone = &quot;108:120&quot;;&amp;#10;                parttwo = &quot;120:132&quot;;&amp;#10;                partthree = &quot;132:144&quot;;&amp;#10;            } else {&amp;#10;                if ((cond === &quot;3&quot;)) {&amp;#10;                    partone = &quot;144:156&quot;;&amp;#10;                    parttwo = &quot;156:168&quot;;&amp;#10;                    partthree = &quot;168:180&quot;;&amp;#10;                } else {&amp;#10;                    if ((cond === &quot;6&quot;)) {&amp;#10;                        partone = &quot;180:192&quot;;&amp;#10;                        parttwo = &quot;192:204&quot;;&amp;#10;                        partthree = &quot;204:216&quot;;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;partlist = [partone, parttwo, partthree];&amp;#10;// Random shuffle partlist using function 'shuffle'&amp;#10;shuffle(partlist);&amp;#10;console.log(partlist);&amp;#10;&amp;#10;first = partlist[0];&amp;#10;second = partlist[1];&amp;#10;third = partlist[2];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if cond == &quot;1&quot;:&amp;#10;    partone = &quot;0:12&quot;&amp;#10;    parttwo = &quot;12:24&quot;&amp;#10;    partthree = &quot;24:36&quot;&amp;#10;elif cond == &quot;X&quot;:&amp;#10;    partone = &quot;36:48&quot;&amp;#10;    parttwo = &quot;48:60&quot;&amp;#10;    partthree = &quot;60:72&quot;&amp;#10;elif cond == &quot;2&quot;:&amp;#10;    partone = &quot;72:84&quot;&amp;#10;    parttwo = &quot;84:96&quot;&amp;#10;    partthree = &quot;96:108&quot;&amp;#10;elif cond == &quot;4&quot;:&amp;#10;    partone = &quot;108:120&quot;&amp;#10;    parttwo = &quot;120:132&quot;&amp;#10;    partthree = &quot;132:144&quot;&amp;#10;elif cond == &quot;3&quot;:&amp;#10;    partone = &quot;144:156&quot;&amp;#10;    parttwo = &quot;156:168&quot;&amp;#10;    partthree = &quot;168:180&quot;&amp;#10;elif cond == &quot;6&quot;:&amp;#10;    partone = &quot;180:192&quot;&amp;#10;    parttwo = &quot;192:204&quot;&amp;#10;    partthree = &quot;204:216&quot;&amp;#10;&amp;#10;import random&amp;#10;partlist = [partone, parttwo, partthree]&amp;#10;random.shuffle(partlist)&amp;#10;first = partlist[0] &amp;#10;second = partlist[1]&amp;#10;third = partlist[2]&amp;#10;    " valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TD_randomize" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="TrainVolumeSet">
      <CodeComponent name="code_8">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="setvolume = 1&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="setvolume = 1;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_8" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="TDTrainFeedback">
      <TextComponent name="TDTrainFeedbackMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TDTrainFeedbackMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$'You correctly responded to ' + str(respcount) + ' of the 5 target syllables. Your average response time was '+ str(round(meanRT, 2)) + 's.'  " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="EndFeedback">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndFeedback" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_10">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="respcount = 0;&amp;#10;reactiontime = 0;&amp;#10;TrainRT = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="respcount = 0&amp;#10;reactiontime = 0&amp;#10;TrainRT = 0" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_10" valType="code"/>
      </CodeComponent>
      <TextComponent name="TrainingContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="train">
      <CodeComponent name="code_9">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="respOnset = 0 &amp;#10;TargetOnset = 0 # Target sound onset&amp;#10;previousOnset = 0 &amp;#10;respcount = 0 # Number of &quot;hits&quot;&amp;#10;TrainRT = 0 # Sum of all RTs&amp;#10;&amp;#10;mytimer = core.Clock()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="respOnset = 0;&amp;#10;TargetOnset = 0;&amp;#10;previousOnset = 0;&amp;#10;respcount = 0;&amp;#10;TrainRT = 0;&amp;#10;&amp;#10;mytimer = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((Sound === Target)) {&amp;#10;    TargetOnset = mytimer.getTime();&amp;#10;}&amp;#10;soundOnset = mytimer.getTime();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if Sound == Target:&amp;#10;    TargetOnset = mytimer.getTime()&amp;#10;soundOnset = mytimer.getTime()&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="TrainTD.addData(&quot;TargetOnset&quot;, TargetOnset);&amp;#10;&amp;#10;if (typeof TrainResp.keys !== 'undefined') {  // we had a response&amp;#10;    respOnset = (TrainResp.rt[0] + soundOnset);&amp;#10;    TrainTD.addData(&quot;RespOnset&quot;, respOnset);&amp;#10;    if (((respOnset - previousOnset) &gt; 1.2)) {&amp;#10;        reactiontime = (respOnset - TargetOnset);&amp;#10;        TrainTD.addData(&quot;ReactionTime&quot;, reactiontime);&amp;#10;        if ((reactiontime &lt; 1.2)) {&amp;#10;            respcount += 1;&amp;#10;            TrainRT += reactiontime;&amp;#10;            previousOnset = respOnset;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((respcount &gt; 0)) {&amp;#10;    meanRT = (TrainRT / respcount);&amp;#10;    TrainTD.addData(&quot;mean.rt&quot;, meanRT);&amp;#10;} else {&amp;#10;    meanRT = 0;&amp;#10;}&amp;#10;if ((respcount &gt; 5)) {&amp;#10;    respcount = 5;&amp;#10;}&amp;#10;TrainTD.addData(&quot;RespOnset&quot;, respOnset);&amp;#10;TrainTD.addData(&quot;Respcount&quot;, respcount);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# Set Target Onset time&amp;#10;#if Sound == Target:&amp;#10;#    TargetOnset = TDTrainSound.tStartRefresh&amp;#10;TrainTD.addData('TargetOnset', TargetOnset)&amp;#10;# Check if keyboard has been pressed&amp;#10;if TrainResp.keys in ['', [], None]:&amp;#10;    TrainResp.keys = None&amp;#10;if TrainResp.keys != None: # we had a response&amp;#10;    #respOnset = TrainResp.rt[0] + TDTrainSound.tStartRefresh&amp;#10;    respOnset = TrainResp.rt[0] + soundOnset&amp;#10;    TrainTD.addData('RespOnset', respOnset)&amp;#10;    # Check if the response is too close to the previous valid response&amp;#10;    if respOnset - previousOnset &gt; 1.2:&amp;#10;        # Calculate RT&amp;#10;        reactiontime = respOnset - TargetOnset&amp;#10;        TrainTD.addData('ReactionTime', reactiontime)&amp;#10;        # Check if RT is below the cutoff&amp;#10;        if reactiontime &lt; 1.2:&amp;#10;            # Count it as a valid &quot;hit&quot;&amp;#10;            respcount += 1&amp;#10;            # Count the RT toward total RTs&amp;#10;            TrainRT += reactiontime&amp;#10;            # Use this as the latest valid response&amp;#10;            previousOnset = respOnset&amp;#10;# Calculate the mean RT&amp;#10;if respcount &gt; 0:&amp;#10;    meanRT = TrainRT/respcount&amp;#10;    TrainTD.addData('mean.rt', meanRT)&amp;#10;else: # If no response was made&amp;#10;    meanRT = 0&amp;#10;# If too many responses were made     &amp;#10;if respcount &gt; 5:&amp;#10;    respcount = 5&amp;#10;    &amp;#10;TrainTD.addData('RespOnset', respOnset)&amp;#10;TrainTD.addData('Respcount', respcount)&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_9" valType="code"/>
      </CodeComponent>
      <SoundComponent name="TDTrainSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TDTrainSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="0.3" valType="code"/>
      </SoundComponent>
      <KeyboardComponent name="TrainResp">
        <Param name="allowedKeys" updates="constant" val="'space'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TrainResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TDTrainSound.getDuration()+0.03" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="TDTrainTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TDTrainTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TDTrainSound.getDuration()+0.05" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE as quickly as possible when you hear the target syllable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Cross3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Cross3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$TDTrainSound.getDuration()+0.05" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="TrainingSample">
      <TextComponent name="SampleMssg2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="SampleMssg2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The target syllable is:&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;(Press SPACE when you hear this syllable in the recording)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="TrainigTarget">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="TrainigTarget" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_11">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="trainingcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="trainingcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="trainingcount += 1;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="trainingcount += 1&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_11" valType="code"/>
      </CodeComponent>
      <TextComponent name="TrainingNumber">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingNumber" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$'Training ' + str(trainingcount) " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="TrainingSampleContinue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingSampleContinue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to listen to this syllable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="TSContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TSContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TrainingPlaySample">
      <SoundComponent name="TrainingSampleSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TrainingSampleSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$TargetFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="0.3" valType="code"/>
      </SoundComponent>
      <SoundComponent name="TraingRepeatSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TraingRepeatSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$TargetFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$TrainingSampleSound.getDuration() + 1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="0.3" valType="code"/>
      </SoundComponent>
      <TextComponent name="TrainTargetTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="TrainTargetTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text_5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="The target syllable is:&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;(Press SPACE when you hear this syllable in the recording)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="TrainingBeginSample">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingBeginSample" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$TrainingSampleSound.getDuration() +1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin listening" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="TrainingNumber2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingNumber2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$'Training ' + str(trainingcount) " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="TrainEndSample">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TrainEndSample" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_2">
      <SoundComponent name="sound_1">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="sound_1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <CodeComponent name="code_12">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="temp_clock = core.Clock()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="temp_clock = new core.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="Onset = temp_clock.getTime();&amp;#10;if ((key_resp_2 !== null)) {&amp;#10;    response = temp_clock.getTime();&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="Onset = temp_clock.getTime()&amp;#10;if key_resp_2 != None:&amp;#10;    response = temp_clock.getTime()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="trials_2.addData(&quot;Onset&quot;, Onset);&amp;#10;trials_2.addData(&quot;Response&quot;, response);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="trials_2.addData('Onset', Onset)&amp;#10;trials_2.addData('Response', response)&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_12" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$sound_1.getDuration()" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="coding_part">
      <CodeComponent name="code_13">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="  " valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_13" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="MSTplay">
      <TextComponent name="MSTTestOptions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTestOptions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="(Press the corresponding number on your keyboard)&amp;#10;&amp;#10;1 = OLD (The exact same word has been played before)&amp;#10;&amp;#10;2 = NEW (This word is being played for the first time)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="MSTTestPlay">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTTestPlay" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$File" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <KeyboardComponent name="MST_resp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$WordCorrect" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MST_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="MSTTestTrialNum">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTestTrialNum" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$number" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTTestNote">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="MSTTestNote" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="*Words that are similar to but different from previously played words should also be labeled as NEW&amp;#10;&amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTTrialCount">
      <TextComponent name="Cross1500ms">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="Cross1500ms" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="MSTTrialCounter">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="MSTcount = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="MSTcount = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="MSTcount += 1;&amp;#10;number = (MSTcount.toString() + &quot;/100&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="MSTcount += 1&amp;#10;number = str(MSTcount) + &quot;/100&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrialCounter" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="MSTTrainFeedbackII">
      <TextComponent name="MSTTrainFeedbackMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainFeedbackMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$feedback" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTTrainFeedback">
      <CodeComponent name="MSTTrainFeedbackType">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((Type === &quot;NEW&quot;)) {&amp;#10;    message = &quot;This is a NEW word. \nThis is your first time hearing this word.&quot;;&amp;#10;} else {&amp;#10;    if ((Type === &quot;SIMILAR&quot;)) {&amp;#10;        message = &quot;This is a NEW word. \nNote that this one sounds similar to the previous word but is not exactly the same.&quot;;&amp;#10;    } else {&amp;#10;        if ((Type === &quot;OLD&quot;)) {&amp;#10;            message = &quot;This is an OLD word. \nThis word is exactly the same as the first word.&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if Type == 'NEW':&amp;#10;    message = &quot;This is a NEW word. \nThis is your first time hearing this word.&quot;&amp;#10;elif Type == 'SIMILAR':&amp;#10;    message = &quot;This is a NEW word. \nNote that this one sounds similar to the previous word but is not exactly the same.&quot;&amp;#10;elif Type == 'OLD':&amp;#10;    message = &quot;This is an OLD word. \nThis word is exactly the same as the first word.&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((MSTTrainKeys.corr === 1)) {&amp;#10;    feedback = &quot;CORRECT&quot;;&amp;#10;} else {&amp;#10;    feedback = &quot;INCORRECT&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if MSTTrainKeys.corr == 1:&amp;#10;    feedback = 'CORRECT'&amp;#10;else:&amp;#10;    feedback = 'INCORRECT'" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainFeedbackType" valType="code"/>
      </CodeComponent>
      <TextComponent name="MSTTrainOptions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainOptions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1 = OLD      2 = NEW" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTTrainMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$message" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTTrainContinueMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainContinueMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press the correct number on your keyboard" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTTrainKeys">
        <Param name="allowedKeys" updates="constant" val="'1', '2'," valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainKeys" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="MSTTrainCross2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainCross2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTTrain">
      <CodeComponent name="MSTTrainTrialCount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Tcount += 1;&amp;#10;MSTTrialCount = (&quot;Trial &quot; + Tcount.toString());&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="#if ResponsePractice.corr == 1:&amp;#10;#    feedback = &quot;CORRECT&quot;&amp;#10;#    txtcolor = &quot;lightgreen&quot;&amp;#10;#else:&amp;#10;#    feedback = &quot;INCORRECT&quot;&amp;#10;#    txtcolor = &quot;red&quot;&amp;#10;#    &amp;#10;#message = &quot;This is a &quot; + Type + &quot; word.&quot;&amp;#10;Tcount += 1&amp;#10;MSTTrialCount = 'Trial ' + str(Tcount)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainTrialCount" valType="code"/>
      </CodeComponent>
      <SoundComponent name="MSTTrainSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="MSTTrainCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$MSTTrainSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTTrainTrialNum">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainTrialNum" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$MSTTrainSound.getDuration()" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$MSTTrialCount" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="MSTTestStartInstrct">
      <TextComponent name="MSTTestBeginTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTestBeginTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great job! This is the end of the practice.&amp;#10;&amp;#10;&amp;#10;We will now begin the actual task. There are 100 sound files in total. The words from the practice are not part of the actual task. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTTestBeginKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTTestBeginKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="MSTTestBegin">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTestBegin" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="MSTOrderRandomize">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="condition = &quot;0:100&quot;;&amp;#10;c = Math.floor(Math.random() * 6);&amp;#10;if ((c === 0)) {&amp;#10;    condition = &quot;0:100&quot;;&amp;#10;} else {&amp;#10;    if ((c === 1)) {&amp;#10;        condition = &quot;100:200&quot;;&amp;#10;    } else {&amp;#10;        if ((c === 2)) {&amp;#10;            condition = &quot;200:300&quot;;&amp;#10;        } else {&amp;#10;            if ((c === 3)) {&amp;#10;                condition = &quot;300:400&quot;;&amp;#10;            } else {&amp;#10;                if ((c === 4)) {&amp;#10;                    condition = &quot;400:500&quot;;&amp;#10;                } else {&amp;#10;                    if ((c === 5)) {&amp;#10;                        condition = &quot;500:600&quot;;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="condition = &quot;0:100&quot;&amp;#10;import random&amp;#10;c = random.randint(0, 6)&amp;#10;if c == 0:&amp;#10;    condition = &quot;0:100&quot;&amp;#10;elif c == 1:&amp;#10;    condition = &quot;100:200&quot;&amp;#10;elif c == 2:&amp;#10;    condition = &quot;200:300&quot;&amp;#10;elif c == 3:&amp;#10;    condition = &quot;300:400&quot;&amp;#10;elif c == 4:&amp;#10;    condition = &quot;400:500&quot;&amp;#10;elif c == 5:&amp;#10;    condition = &quot;500:600&quot;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="MSTOrderRandomize" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="MSTTrainIntro">
      <TextComponent name="MSTTrainIntroTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainIntroTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will first begin with a few practice trials to familiarize you with the task. During the practice, we will give you the correct answer." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTTrainIntroCont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTTrainIntroCont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTTrainIntroKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainIntroKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="MSTTrainCounter">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="Tcount = 1&amp;#10;MSTTrialCount = 'Trial ' + str(Tcount)&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="Tcount = 1;&amp;#10;MSTTrialCount = (&quot;Trial &quot; + Tcount.toString());&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="Randomization.addData(&quot;Condition&quot;, 1);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="Randomization.addData('Condition', 1)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="MSTTrainCounter" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="MSTWelcome">
      <TextComponent name="MSTWelcomeTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTWelcomeTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Task A (20 minutes)&amp;#10;&amp;#10;Researchers in XXX University are studying alien words and have created a sound file for each word they have collected. However, some of the sound files have been accidentally duplicated and now they need your help looking for the duplicated words.&amp;#10;&amp;#10;There are 100 sound files in total but almost half of them are duplicates. Your task is to listen to each word and label them as either &quot;OLD&quot; (duplicate) or &quot;NEW&quot;." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="WelcomeP2Continue">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeP2Continue" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey8">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey8" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="BreakLoop">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Randomization.finished = true;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="Randomization.finished = True" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="BreakLoop" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="AFCQuestion">
      <TextComponent name="QuestionTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="QuestionTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Which word sounded correct?&amp;#10;(Press the corresponding number on your keyboard)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="AFCResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', " valType="code"/>
        <Param name="correctAns" updates="constant" val="$AFCCorrect" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="AFCResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AFCSecond">
      <TextComponent name="Word2No">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Word2No" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.07" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="Word_2_1">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_2_1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word21" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Word_2_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_2_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word22" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.38" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Word_2_3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_2_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word23" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.76" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
    </Routine>
    <Routine name="AFCFirst">
      <TextComponent name="Word1No">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Word1No" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.07" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="Word_1_1">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_1_1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word11" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Word_1_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_1_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word12" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.38" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Word_1_3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Word_1_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word13" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.76" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
    </Routine>
    <Routine name="SLWelcome">
      <TextComponent name="WelcomeMssg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="WelcomeMssg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Task B (35 minutes)&amp;#10;&amp;#10;Researchers from ZZZ University have recently collected some recordings of an alien speech from another planet. The speech consists of syllables that sound similar to English. The researchers need your help to study this speech. &amp;#10;&amp;#10;You will first listen to a 6-minute recording of this speech and then complete three different tasks. In total, the study will take approximately 35 minutes to complete. You will be able to take short breaks in between tasks. " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueButton">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueButton" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="ContinueTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="BreakLoop2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="Randomization.finished = true;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="Randomization.finished = True" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="BreakLoop2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="TDTrainingIntro">
      <TextComponent name="TrainingBeginTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TrainingBeginTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We will begin with a training session using a fake speech created by the researchers.&amp;#10;&amp;#10;During the training, you will see the number of target syllables you recorded and your average response speed. &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to begin training" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="TrainingContinueKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="TrainingContinueKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Intro">
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="run = 1&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="run = 1;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((run === 1)) {&amp;#10;    intromssg = &quot;In this experiment, you will help university researchers who are studying alien languages. \nThere are two parts in this experiment and you will work with a different alien language in each part. \n\n\n\n\n\n\nPress SPACE to begin Part 1&quot;;&amp;#10;} else {&amp;#10;    intromssg = &quot;Thanks for your help! This is the end of Part 1. You may take a short break now if you wish. \n\nIn Part 2, you will help researchers studying a different alien speech. \n\n\n\n\n\n\nPress SPACE to begin Part 2&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if run == 1:&amp;#10;    intromssg = &quot;In this experiment, you will help university researchers who are studying alien languages. \nThere are two parts in this experiment and you will work with a different alien language in each part. \n\n\n\n\n\n\nPress SPACE to begin Part 1&quot;&amp;#10;else:&amp;#10;    intromssg = &quot;Thanks for your help! This is the end of Part 1. You may take a short break now if you wish. \n\nIn Part 2, you will help researchers studying a different alien speech. \n\n\n\n\n\n\nPress SPACE to begin Part 2&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="run += 1;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="run += 1" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <TextComponent name="IntroTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="IntroTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$intromssg" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="IntroContKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="IntroContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MSTWelcome2">
      <TextComponent name="MSTWelcome2Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTWelcome2Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="It is important to note that some of the words are similar but not identical. Pay close attention to each word and only label it as &quot;OLD&quot; if it is EXACTLY THE SAME as a previous word." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="MSTWelcomeCont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="MSTWelcomeCont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="MSTWelcomeContKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="MSTWelcomeContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="HearingCheckIntro">
      <TextComponent name="HearingCheckTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="HearingCheckTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Thank you for helping the researchers!&amp;#10;&amp;#10;Lastly, we will play you a few short speech sounds. In each trial, please select the syllable that matches with the sound you hear.&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="EndKey2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndKey2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="HearingCheck">
      <SoundComponent name="CheckWord">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckWord" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SoundFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="WordOptions">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="WordOptions" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$&quot;1. &quot;+Word1 + &quot;         2. &quot; + Word2 + &quot;         3. &quot; + Word3" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="CheckQuestion">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="CheckQuestion" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Which sound did you hear?&amp;#10;(Press the corresponding number on your keyboard)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="CheckRespKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3'," valType="code"/>
        <Param name="correctAns" updates="constant" val="$Correct" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="CheckRespKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Pause1sec">
      <TextComponent name="PauseTxt2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="PauseTxt2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="End">
      <TextComponent name="EndTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="EndTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is the end of the experiment.&amp;#10;&amp;#10;Thank you for your participation.&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE to exit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ExitKey2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ExitKey2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_separate">
      <CodeComponent name="TargetandRespTime">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="respOnsetP = 0 &amp;#10;respcountP = 0&amp;#10;previousOnsetP = 0&amp;#10;TargetOnsetP = 0 # Target sound onset&amp;#10;OccurenceC = 1&amp;#10;hit = 0&amp;#10;mytimerP = core.Clock()" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="respOnsetP = 0;&amp;#10;respcountP = 0;&amp;#10;previousOnsetP = 0;&amp;#10;TargetOnsetP = 0;&amp;#10;OccurenceC = 1;&amp;#10;hit = 0;&amp;#10;mytimerP = new util.Clock();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((TDSound === Target)) {&amp;#10;    TargetOnsetP = mytimerP.getTime();&amp;#10;}&amp;#10;soundOnsetP = mytimerP.getTime();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if TDSound == Target:&amp;#10;    TargetOnsetP = mytimerP.getTime()&amp;#10;soundOnsetP = mytimerP.getTime()&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="TD.addData(&quot;TargetOnsetP&quot;, TargetOnsetP);&amp;#10;if (typeof PlayResp.keys !== 'undefined') {  // we had a response&amp;#10;    respcountP += 1;&amp;#10;    respOnsetP = (PlayResp.rt[0] + soundOnsetP);&amp;#10;    if (((respOnsetP - previousOnsetP) &gt; 1.2)) {&amp;#10;        reactiontimeP = (respOnsetP - TargetOnsetP);&amp;#10;        if ((reactiontimeP &lt; 1.2)) {&amp;#10;            TD.addData(&quot;ReactionTimeP&quot;, reactiontimeP);&amp;#10;            TD.addData(&quot;TargetSyllable&quot;, Target);&amp;#10;            TD.addData(&quot;TargetPosition&quot;, Position);&amp;#10;            TD.addData(&quot;TargetOccurence&quot;, OccurenceC);&amp;#10;            hit += 1;&amp;#10;            previousOnsetP = respOnsetP;&amp;#10;        }&amp;#10;    }&amp;#10;}" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# Set Target Onset time&amp;#10;TD.addData('TargetOnsetP', TargetOnsetP)&amp;#10;# Check if keyboard has been pressed&amp;#10;if PlayResp.keys in ['', [], None]:&amp;#10;    PlayResp.keys = None&amp;#10;if PlayResp.keys != None: # we had a response&amp;#10;    respcountP += 1&amp;#10;    #respOnset = TrainResp.rt[0] + TDTrainSound.tStartRefresh&amp;#10;    respOnsetP = PlayResp.rt[0] + soundOnsetP    &amp;#10;    # Check if the response is too close to the previous valid response&amp;#10;    if respOnsetP - previousOnsetP &gt; 1.2:&amp;#10;        # Calculate RT&amp;#10;        reactiontimeP = respOnsetP - TargetOnsetP&amp;#10;        # Check if RT is below the cutoff&amp;#10;        if reactiontimeP &lt; 1.2:&amp;#10;            TD.addData('ReactionTimeP', reactiontimeP)&amp;#10;            TD.addData('TargetSyllable', Target)&amp;#10;            TD.addData('TargetPosition', Position)&amp;#10;            TD.addData('TargetOccurence', OccurenceC)&amp;#10;            # Count it as a valid &quot;hit&quot;&amp;#10;            hit += 1&amp;#10;            # Use this as the latest valid response&amp;#10;            previousOnsetP = respOnsetP&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="TargetandRespTime" valType="code"/>
      </CodeComponent>
      <SoundComponent name="PlaySound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PlaySound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$TDSoundFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <TextComponent name="PlayText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="PlayText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;&amp;#10;&amp;#10;Press SPACE as quickly as possible when you hear the target syllable" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PlayResp">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="PlayResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="store" updates="constant" val="all keys" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="TargetSoundTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="TargetSoundTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Target" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="FamRating">
      <TextComponent name="FamRatePrompt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FamRatePrompt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="How familiar does this word sound?&amp;#10;(Press the corresponding number on your keyboard)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="RatingScale">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="RatingScale" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1 ----------------- 2 ----------------- 3 ----------------- 4" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="RatingScale2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="RatingScale2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&amp;#10;&amp;#10;(Not familiar)                                                                     (Very familiar)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="FamRatingResp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="FamRatingResp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <SoundComponent name="Syllab1">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Syllab1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word11" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Syllab2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Syllab2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word12" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.88" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <SoundComponent name="Syllab3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="Syllab3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$Word13" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1.26" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
    </Routine>
    <Routine name="FamRatingIntro">
      <TextComponent name="FamRateIntroTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FamRateIntroTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="In this part, you will listen to short speech sounds. Some of these may sound familiar to you, as they were spoken in the first part of the study. Others may sound unfamiliar, as they were not spoken in the first part of the study.&amp;#10;&amp;#10;Your job is to listen carefully to these short sounds and rate how familiar they sound to you on a scale of 1 (Not familiar) to 4 (Very familiar).&amp;#10;&amp;#10;There will be 12 trials in total." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="FamIntroCont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="FamIntroCont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="FamRateIntroKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="FamRateIntroKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AttentionCheck3">
      <KeyboardComponent name="AttnCheck3ContKey">
        <Param name="allowedKeys" updates="constant" val="'return'," valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="AttnCheck3ContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="AttnCheck3Txt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttnCheck3Txt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="What is your favorite drink?&amp;#10;&amp;#10;(Please type your answer in the box below)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="AttnCheck3Resp">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="AttnCheck3Resp" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="&amp;#10; " valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
      <TextComponent name="AttnCheck3Cont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="AttnCheck3Cont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press ENTER to submit" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="OccurenceCounter1">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="OccurenceC += 1;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="OccurenceC += 1" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="OccurenceCounter1" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="P2Welcome">
      <TextComponent name="P2WelcomeTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P2WelcomeTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="It seems like the alien speech contains regularly repeating 'words'. In the next part of this study, you will be asked to distinguish these alien words from other sounds." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="P2WelcomeCont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P2WelcomeCont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="P2WelcomeContKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="P2WelcomeContKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TakeBreak">
      <TextComponent name="P2IntroTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="P2IntroTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Thank you for your help! You may take a short break now if you wish." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ContinueTxt5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ContinueTxt5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE to continue" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ContinueKey5">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ContinueKey5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TrainStart">
      <TextComponent name="Three">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Three" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="3" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="Two">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="Two" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Exposure">
      <CodeComponent name="SoundCounter">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="scounter = 0&amp;#10;takebreak = 0&amp;#10;pausecheck = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="scounter = 0;&amp;#10;takebreak = 0;&amp;#10;pausecheck = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="scounter += 1;&amp;#10;if (((((((scounter === 57) || (scounter === 123)) || (scounter === 147)) || (scounter === 177)) || (scounter === 267)) || (scounter === 300))) {&amp;#10;    pausecheck = 1;&amp;#10;} else {&amp;#10;    pausecheck = 0;&amp;#10;}&amp;#10;if ((scounter === 360)) {&amp;#10;    takebreak = 1;&amp;#10;    scounter = 0;&amp;#10;    volumecounter0 = 0;&amp;#10;} else {&amp;#10;    takebreak = 0;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="scounter += 1&amp;#10;&amp;#10;if scounter == 57 or scounter == 123 or scounter == 147 or scounter == 177 or scounter == 267 or scounter == 300:&amp;#10;    pausecheck = 1&amp;#10;else:&amp;#10;    pausecheck = 0&amp;#10;&amp;#10;if scounter == 360: #Restart counting every two minutes&amp;#10;    takebreak = 1&amp;#10;    scounter = 0&amp;#10;    volumecounter0 = 0&amp;#10;else:&amp;#10;    takebreak = 0" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="SoundCounter" valType="code"/>
      </CodeComponent>
      <CodeComponent name="ExposureVolume">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="volume0 = 1&amp;#10;volumecounter0 = 0" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="volume0 = 1;&amp;#10;volumecounter0 = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="volumecounter0 += 1;&amp;#10;if (((volumecounter0 === 1) || (volumecounter0 === 360))) {&amp;#10;    volume0 = 0.03;&amp;#10;} else {&amp;#10;    if (((volumecounter0 === 2) || (volumecounter0 === 359))) {&amp;#10;        volume0 = 0.06;&amp;#10;    } else {&amp;#10;        if (((volumecounter0 === 3) || (volumecounter0 === 358))) {&amp;#10;            volume0 = 0.09;&amp;#10;        } else {&amp;#10;            if (((volumecounter0 === 4) || (volumecounter0 === 357))) {&amp;#10;                volume0 = 0.2;&amp;#10;            } else {&amp;#10;                if (((volumecounter0 === 5) || (volumecounter0 === 356))) {&amp;#10;                    volume0 = 0.3;&amp;#10;                } else {&amp;#10;                    if (((volumecounter0 === 6) || (volumecounter0 === 355))) {&amp;#10;                        volume0 = 0.5;&amp;#10;                    } else {&amp;#10;                        volume0 = 1;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="volumecounter0 += 1&amp;#10;if volumecounter0 == 1 or volumecounter0 == 360:&amp;#10;    volume0 = 0.03&amp;#10;elif volumecounter0 == 2 or volumecounter0 == 359:&amp;#10;    volume0 = 0.06&amp;#10;elif volumecounter0 == 3 or volumecounter0 == 358:&amp;#10;    volume0 = 0.09&amp;#10;elif volumecounter0 == 4 or volumecounter0 == 357:&amp;#10;    volume0 = 0.2&amp;#10;elif volumecounter0 == 5 or volumecounter0 == 356:&amp;#10;    volume0 = 0.3&amp;#10;elif volumecounter0 == 6 or volumecounter0 == 355:&amp;#10;    volume0 = 0.5&amp;#10;else:&amp;#10;    volume0 = 1" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="ExposureVolume" valType="code"/>
      </CodeComponent>
      <SoundComponent name="ExposurePlay">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ExposurePlay" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$SyllableFile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="set every repeat" val="volume0" valType="code"/>
      </SoundComponent>
      <TextComponent name="ExposureCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="ExposureCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="ExposureInstruction">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="ExposureInstruction" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.38" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE as soon as you can when the speech stops" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="ExposurePrep">
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="# Choose the scrambling condition file&amp;#10;import random&amp;#10;c = random.randint(1, 3)&amp;#10;#c = 1&amp;#10;cond = str(c) # Used as the file for the PlayTD loop&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="c = Math.floor((Math.random() * 3)+1);&amp;#10;cond = c.toString();&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="Randomization.addData('Condition', 2)&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="Randomization.addData('Condition', 2)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
      <TextComponent name="ExposureIntro">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ExposureIntro" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="First, we will play a recording of this alien speech for 6 minutes with a short break every 2 minutes. &amp;#10;&amp;#10;The recording is a little broken and the speech will stop playing from time to time. Please help the researchers mark the broken parts by pressing SPACE whenever the speech stops." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="ExposureIntroKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="ExposureIntroKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="ExposureIntroCont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="ExposureIntroCont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE when you are ready to begin" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Pause">
      <KeyboardComponent name="PauseCheckKey">
        <Param name="allowedKeys" updates="constant" val="'space', " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="PauseCheckKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="15" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="PauseCross">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="PauseCross" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="15" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="PauseInstruction">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="PauseInstruction" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="15" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press SPACE as soon as you can when the speech stops" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="TakeABreak">
      <KeyboardComponent name="BreakRespSubmit">
        <Param name="allowedKeys" updates="constant" val="'return' " valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="BreakRespSubmit" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="BreakTxt">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="BreakTxt" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Let's take a break.&amp;#10;&amp;#10;&amp;#10;How many different syllables do you think were in the speech? Click the box below to type your response.&amp;#10;(Press ENTER to submit your answer)" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextboxComponent name="BreakResponse">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="autoLog" updates="constant" val="True" valType="bool"/>
        <Param name="bold" updates="constant" val="False" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="str"/>
        <Param name="borderWidth" updates="constant" val="2" valType="num"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="editable" updates="constant" val="True" valType="bool"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="lineSpacing" updates="constant" val="1.0" valType="num"/>
        <Param name="name" updates="None" val="BreakResponse" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="padding" updates="constant" val="None" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val=" &amp;#10;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </TextboxComponent>
    </Routine>
    <Routine name="BreakOver">
      <TextComponent name="EndBreakInstruction">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="EndBreakInstruction" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="30" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Let's take a break.&amp;#10;&amp;#10;You can press SPACE whenever you are ready to return to the task.&amp;#10;The task will resume automatically after 30 seconds." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="EndBreakKey">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="EndBreakKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="30" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AddRespCountCode">
      <CodeComponent name="AddRespCount">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="falsealarm = 0;&amp;#10;hitrate = 0;&amp;#10;if ((hit !== 0)) {&amp;#10;    falsealarm = (1 - (hit / respcountP));&amp;#10;    hitrate = (hit / 4);&amp;#10;}&amp;#10;TD.addData(&quot;RespCountP&quot;, respcountP);&amp;#10;TD.addData(&quot;FalseAlarmRate&quot;, falsealarm);&amp;#10;TD.addData(&quot;HitRate&quot;, hitrate);&amp;#10;hit = 0;&amp;#10;respcountP = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="falsealarm = 0&amp;#10;hitrate = 0&amp;#10;if hit != 0:&amp;#10;    falsealarm = 1-(hit/respcountP)&amp;#10;    hitrate = hit/4&amp;#10;&amp;#10;TD.addData(&quot;RespCountP&quot;, respcountP)&amp;#10;TD.addData(&quot;FalseAlarmRate&quot;, falsealarm)&amp;#10;TD.addData(&quot;HitRate&quot;, hitrate)&amp;#10;hit = 0&amp;#10;respcountP = 0" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="AddRespCount" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="P2End"/>
    <Routine name="Welcome0"/>
    <Routine name="SoundCheckIntro"/>
    <Routine name="SoundCheck"/>
    <Routine name="HeadphoneCheck"/>
    <LoopInitiator loopType="TrialHandler" name="HeadphoneLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('File', 'Headphone/t1_1.wav'), ('Correct', 1)]), OrderedDict([('File', 'Headphone/t1_2.wav'), ('Correct', 1)]), OrderedDict([('File', 'Headphone/t2_1.wav'), ('Correct', 2)]), OrderedDict([('File', 'Headphone/t2_2.wav'), ('Correct', 2)]), OrderedDict([('File', 'Headphone/t3_1.wav'), ('Correct', 3)]), OrderedDict([('File', 'Headphone/t3_2.wav'), ('Correct', 3)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Headphone_check.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="HeadphoneLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="HeadphonePlay"/>
    <Routine name="HeadphoneFeedback"/>
    <LoopTerminator name="HeadphoneLoop"/>
    <LoopInitiator loopType="TrialHandler" name="Randomization">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('WordOrder', 1), ('SLOrder', 0)]), OrderedDict([('WordOrder', 0), ('SLOrder', 1)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Counterbalance.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="Randomization" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="MSTLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="WordOrder" valType="code"/>
      <Param name="name" updates="None" val="MSTLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="MSTWelcome"/>
    <Routine name="MSTWelcome2"/>
    <Routine name="MSTTrainIntro"/>
    <LoopInitiator loopType="TrialHandler" name="MSTTrainLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('SoundFile', 'Training/FO_YI_LAY.wav'), ('Type', 'NEW'), ('Correct', 2)]), OrderedDict([('SoundFile', 'Training/FO_YI_LAY.wav'), ('Type', 'OLD'), ('Correct', 1)]), OrderedDict([('SoundFile', 'Training/YO_BU_JAY.wav'), ('Type', 'NEW'), ('Correct', 2)]), OrderedDict([('SoundFile', 'Training/JAY_YO_BU.wav'), ('Type', 'SIMILAR'), ('Correct', 2)]), OrderedDict([('SoundFile', 'Training/FO_YI_LAY.wav'), ('Type', 'OLD'), ('Correct', 1)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trainSound.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="MSTTrainLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pause1sec"/>
    <Routine name="MSTTrain"/>
    <Routine name="MSTTrainFeedback"/>
    <LoopTerminator name="MSTTrainLoop"/>
    <Routine name="MSTTestStartInstrct"/>
    <LoopInitiator loopType="TrialHandler" name="MSTPlayLoop">
      <Param name="Selected rows" updates="None" val="$condition" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'A')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'B')]), OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'C')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'D')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'E')]), OrderedDict([('File', 'TestWords/SI_VAI_CHU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/HO_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/PAI_LU_WA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/WAI_VU_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/VAI_HO_LA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GU_CHAI_PI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/BA_KAY_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/WAI_NA_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DA_CHU_VAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/VU_NA_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAY_LI_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/VU_WAI_NA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/HI_NAY_VA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/NA_VU_WAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAY_BA_LI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/NU_CHAY_SO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/NA_WAI_VU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/LI_BA_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/TAI_SA_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GI_SA_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/BA_LI_KAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/LU_HAI_BO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GI_TAI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/LI_KAY_BA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAY_PU_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/CHU_LA_PAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/SA_TAI_GI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KAI_LAY_TA.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/FU_RAI_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAY_MO_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/FI_GU_CHA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/SA_GI_TAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/MO_DAY_PU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAI_ZO_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/TAI_GI_SA.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/PU_DAY_MO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/ZO_RAI_FU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/NO_WA_BAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/FU_ZO_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/KO_SU_FAI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/PU_MO_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAY_PA_TI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/DAI_RU_CHI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/RAI_FU_ZO.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/HA_SI_JAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/MO_PU_DAY.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/LA_ZAY_CHAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/GA_MU_ZI.wav'), ('WordCorrect', 1), ('Correct_type', 'OLD'), ('WordType', 'OLD'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/ZO_FU_RAI.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'SIMILAR'), ('Condition', 'F')]), OrderedDict([('File', 'TestWords/WAI_RO_JU.wav'), ('WordCorrect', 2), ('Correct_type', 'NEW'), ('WordType', 'NEW'), ('Condition', 'F')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="testSound.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="MSTPlayLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="MSTTrialCount"/>
    <Routine name="MSTplay"/>
    <LoopTerminator name="MSTPlayLoop"/>
    <LoopTerminator name="MSTLoop"/>
    <LoopInitiator loopType="TrialHandler" name="SLLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="SLOrder" valType="code"/>
      <Param name="name" updates="None" val="SLLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SLWelcome"/>
    <Routine name="ExposurePrep"/>
    <LoopInitiator loopType="TrialHandler" name="ExposureLoop">
      <Param name="Selected rows" updates="None" val="0:1080" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond + &quot;_new_list.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="ExposureLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Exposure"/>
    <LoopInitiator loopType="TrialHandler" name="PauseOnOff">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="pausecheck" valType="code"/>
      <Param name="name" updates="None" val="PauseOnOff" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pause"/>
    <LoopTerminator name="PauseOnOff"/>
    <LoopInitiator loopType="TrialHandler" name="BreakOnOff">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="takebreak" valType="code"/>
      <Param name="name" updates="None" val="BreakOnOff" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="TakeABreak"/>
    <Routine name="BreakOver"/>
    <LoopTerminator name="BreakOnOff"/>
    <LoopTerminator name="ExposureLoop"/>
    <Routine name="Part1Intro"/>
    <Routine name="TDTrainingIntro"/>
    <LoopInitiator loopType="TrialHandler" name="TrainTDLoop">
      <Param name="Selected rows" updates="None" val="216:218" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 1), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 1), ('Position', 3)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 1), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 2), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 2), ('Position', 3)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 2), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 3), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 3), ('Position', 3)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 3), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 4), ('Position', 1)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 4), ('Position', 3)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 4), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 5), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 5), ('Position', 3)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 5), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 're'), ('TargetFile', 'SL_Sounds/re.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'ti'), ('TargetFile', 'SL_Sounds/ti.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ko'), ('TargetFile', 'SL_Sounds/ko.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'pu'), ('TargetFile', 'SL_Sounds/pu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ta'), ('TargetFile', 'SL_Sounds/ta.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'su'), ('TargetFile', 'SL_Sounds/su.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ge'), ('TargetFile', 'SL_Sounds/ge.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'ni'), ('TargetFile', 'SL_Sounds/ni.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'fe'), ('TargetFile', 'SL_Sounds/fe.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'me'), ('TargetFile', 'SL_Sounds/me.wav'), ('Condition', 6), ('Position', 1)]), OrderedDict([('Target', 'ru'), ('TargetFile', 'SL_Sounds/ru.wav'), ('Condition', 6), ('Position', 3)]), OrderedDict([('Target', 'fu'), ('TargetFile', 'SL_Sounds/fu.wav'), ('Condition', 6), ('Position', 2)]), OrderedDict([('Target', 'PI'), ('TargetFile', 'SL_Sounds/My Syllables/PI.wav'), ('Condition', 'Train'), ('Position', 0)]), OrderedDict([('Target', 'DA'), ('TargetFile', 'SL_Sounds/My Syllables/DA.wav'), ('Condition', 'Train'), ('Position', 0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="TargetSyllables.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="TrainTDLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="TrainingSample"/>
    <Routine name="TrainingPlaySample"/>
    <Routine name="TrainStart"/>
    <LoopInitiator loopType="TrialHandler" name="TrainTD">
      <Param name="Selected rows" updates="None" val="0:45" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')]), OrderedDict([('Sound', 'PA'), ('File', 'SL_Sounds/PA.wav')]), OrderedDict([('Sound', 'DO'), ('File', 'SL_Sounds/DO.wav')]), OrderedDict([('Sound', 'TI'), ('File', 'SL_Sounds/TI.wav')]), OrderedDict([('Sound', 'TU'), ('File', 'SL_Sounds/TU.wav')]), OrderedDict([('Sound', 'PI'), ('File', 'SL_Sounds/PI.wav')]), OrderedDict([('Sound', 'LO'), ('File', 'SL_Sounds/LO.wav')]), OrderedDict([('Sound', 'WI'), ('File', 'SL_Sounds/WI.wav')]), OrderedDict([('Sound', 'DA'), ('File', 'SL_Sounds/DA.wav')]), OrderedDict([('Sound', 'KU'), ('File', 'SL_Sounds/KU.wav')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="TDTrainList.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="TrainTD" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="train"/>
    <LoopTerminator name="TrainTD"/>
    <Routine name="Pause1sec"/>
    <Routine name="TDTrainFeedback"/>
    <LoopTerminator name="TrainTDLoop"/>
    <Routine name="P1IntroII"/>
    <LoopInitiator loopType="TrialHandler" name="TD">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="TD" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="FirstTDLoop">
      <Param name="Selected rows" updates="None" val="$first" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="TargetSyllables.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="FirstTDLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SampleIntro"/>
    <Routine name="PlaySample"/>
    <Routine name="TDStart"/>
    <LoopInitiator loopType="TrialHandler" name="FirstTD">
      <Param name="Selected rows" updates="None" val="$rows" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond + &quot;_TD_list.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="FirstTD" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_separate"/>
    <LoopTerminator name="FirstTD"/>
    <Routine name="Pause1sec"/>
    <Routine name="AddRespCountCode"/>
    <LoopTerminator name="FirstTDLoop"/>
    <Routine name="AttentionCheck3"/>
    <LoopInitiator loopType="TrialHandler" name="SecondTDLoop">
      <Param name="Selected rows" updates="None" val="$second" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="TargetSyllables.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SecondTDLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SampleIntro"/>
    <Routine name="PlaySample"/>
    <Routine name="TDStart"/>
    <LoopInitiator loopType="TrialHandler" name="SecondTD">
      <Param name="Selected rows" updates="None" val="$rows" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond+ &quot;_TD_list.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="SecondTD" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_separate"/>
    <LoopTerminator name="SecondTD"/>
    <Routine name="Pause1sec"/>
    <Routine name="AddRespCountCode"/>
    <LoopTerminator name="SecondTDLoop"/>
    <Routine name="AttentionCheck1"/>
    <LoopInitiator loopType="TrialHandler" name="thirdTDLoop">
      <Param name="Selected rows" updates="None" val="$third" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 1)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 1)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 1)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 1)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 1)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 2)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 2)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 2)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 2)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 2)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 3)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 3)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 3)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 3)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 3)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 4)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 4)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 4)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 4)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 4)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 5)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 5)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 5)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 5)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 5)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'SI'), ('TargetFile', 'SL_Sounds/SI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'MU'), ('TargetFile', 'SL_Sounds/MU.wav'), ('Condition', 6)]), OrderedDict([('Target', 'RAI'), ('TargetFile', 'SL_Sounds/RAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'ZO'), ('TargetFile', 'SL_Sounds/ZO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'FO'), ('TargetFile', 'SL_Sounds/FO.wav'), ('Condition', 6)]), OrderedDict([('Target', 'JAI'), ('TargetFile', 'SL_Sounds/JAI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'NAY'), ('TargetFile', 'SL_Sounds/NAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'GA'), ('TargetFile', 'SL_Sounds/GA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'KI'), ('TargetFile', 'SL_Sounds/KI.wav'), ('Condition', 6)]), OrderedDict([('Target', 'BA'), ('TargetFile', 'SL_Sounds/BA.wav'), ('Condition', 6)]), OrderedDict([('Target', 'TAY'), ('TargetFile', 'SL_Sounds/TAY.wav'), ('Condition', 6)]), OrderedDict([('Target', 'WU'), ('TargetFile', 'SL_Sounds/WU.wav'), ('Condition', 6)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="TargetSyllables.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="thirdTDLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SampleIntro"/>
    <Routine name="PlaySample"/>
    <Routine name="TDStart"/>
    <LoopInitiator loopType="TrialHandler" name="ThirdTD">
      <Param name="Selected rows" updates="None" val="$rows" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond + &quot;_TD_list.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="ThirdTD" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial_separate"/>
    <LoopTerminator name="ThirdTD"/>
    <Routine name="Pause1sec"/>
    <Routine name="AddRespCountCode"/>
    <LoopTerminator name="thirdTDLoop"/>
    <LoopTerminator name="TD"/>
    <Routine name="TakeBreak"/>
    <Routine name="P2Welcome"/>
    <Routine name="FamRatingIntro"/>
    <LoopInitiator loopType="TrialHandler" name="FamRatingLoop">
      <Param name="Selected rows" updates="None" val="0:12" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond + &quot;_explicit.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="FamRatingLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pause1sec"/>
    <Routine name="FamRating"/>
    <LoopTerminator name="FamRatingLoop"/>
    <Routine name="AttentionCheck2"/>
    <Routine name="Part2Intro2"/>
    <LoopInitiator loopType="TrialHandler" name="AFCTest">
      <Param name="Selected rows" updates="None" val="12:28" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$cond + &quot;_explicit.xlsx&quot;" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="AFCTest" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="count"/>
    <Routine name="AFCStart"/>
    <Routine name="AFCFirst"/>
    <Routine name="AFCSecond"/>
    <Routine name="AFCQuestion"/>
    <LoopTerminator name="AFCTest"/>
    <Routine name="HearingCheckIntro"/>
    <LoopInitiator loopType="TrialHandler" name="HearingcheckLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Target', 'TI'), ('SoundFile', 'SL_Sounds/TI.wav'), ('Word1', 'TEE'), ('Word2', 'DEE'), ('Word3', 'SEE'), ('Correct', 1)]), OrderedDict([('Target', 'SU'), ('SoundFile', 'SL_Sounds/SU.wav'), ('Word1', 'SO'), ('Word2', 'SU'), ('Word3', 'ZU'), ('Correct', 2)]), OrderedDict([('Target', 'KAY'), ('SoundFile', 'MSTTestWords/KAY.wav'), ('Word1', 'KEE'), ('Word2', 'KAY'), ('Word3', 'HAY'), ('Correct', 2)]), OrderedDict([('Target', 'FU'), ('SoundFile', 'MSTTestWords/FU.wav'), ('Word1', 'VU'), ('Word2', 'FO'), ('Word3', 'FU'), ('Correct', 3)]), OrderedDict([('Target', 'BA'), ('SoundFile', 'MSTTestWords/BA.wav'), ('Word1', 'PA'), ('Word2', 'BEE'), ('Word3', 'BA'), ('Correct', 3)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="HearingCheckSounds.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="HearingcheckLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pause1sec"/>
    <Routine name="HearingCheck"/>
    <LoopTerminator name="HearingcheckLoop"/>
    <LoopTerminator name="SLLoop"/>
    <LoopTerminator name="Randomization"/>
    <Routine name="P2End"/>
  </Flow>
</PsychoPy2experiment>
